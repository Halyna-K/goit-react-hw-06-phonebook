{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","addNewContact","useState","name","setName","number","setNumber","nameId","uuid","numberId","handleChange","e","target","value","className","s","form","onSubmit","preventDefault","label","htmlFor","id","onChange","input","type","placeholder","pattern","title","required","Button","variant","ContactList","contacts","onDeleteContact","list","map","contact","item","text","onClick","Filter","filter","App","JSON","parse","localStorage","getItem","initialContacts","setContacts","setFilter","normalizedContacts","useMemo","normalizedFilter","toLowerCase","includes","useEffect","console","log","setItem","stringify","changeFilter","useCallback","obj","el","alert","sameName","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c87a48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","import s from \"./ContactForm.module.css\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport function ContactForm({ addNewContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameId = uuid();\n  const numberId = uuid();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = { name, number };\n    addNewContact(contact);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameId}>\n        Name\n      </label>\n      <input\n        id={nameId}\n        onChange={handleChange}\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <label className={s.label} htmlFor={numberId}>\n        Number\n      </label>\n      <input\n        id={numberId}\n        onChange={handleChange}\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        placeholder=\"Enter number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <Button\n        type=\"submit\"\n        variant=\"secondary\"\n        //   className={s.btn}\n      >\n        Add contacts\n      </Button>\n    </form>\n  );\n}\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map((contact) => (\n      <li key={contact.id} className={s.item}>\n        <p className={s.text}>{contact.name + \" : \" + contact.number}</p>\n        <Button\n          variant=\"outline-secondary\"\n          // className={s.btn}\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          Delete\n        </Button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst nameId = uuid();\n\nexport const Filter = ({ value, onChange }) => (\n  <label htmlFor={nameId} className={s.filter}>\n    Find contact by name\n    <input\n      id={nameId}\n      onChange={onChange}\n      className={s.input}\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      placeholder=\"Enter contact name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { v4 as uuid } from \"uuid\";\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport initialContacts from \"./components/dataBase/contacts.json\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nfunction App() {\n  // const [contacts, setContacts] = useLS([initialContacts], []);\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(localStorage.getItem([initialContacts])) ?? []\n  );\n\n  const [filter, setFilter] = useState(\"\");\n\n  const normalizedContacts = useMemo(() => {\n    let normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [filter, contacts]);\n\n  useEffect(() => {\n    console.log(`UPDATE`);\n    if (contacts !== initialContacts) {\n      localStorage.setItem(initialContacts, JSON.stringify(contacts));\n    }\n  }, [contacts]);\n\n  const addNewContact = (obj) => {\n    const nameId = uuid();\n    const sameName = contacts.map((el) => el.name).includes(obj.name);\n    if (sameName) {\n      alert(`${obj.name} is already in contacts!`);\n    } else {\n      setContacts((sameName) => [...sameName, { ...obj, id: nameId }]);\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((contacts) =>\n      contacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const changeFilter = useCallback((e) => setFilter(e.target.value), []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm addNewContact={addNewContact} />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={normalizedContacts}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"text\":\"ContactList_text__2dM24\"};"],"sourceRoot":""}